[debug] [2025-08-14T03:00:58.963Z] ----------------------------------------------------------------------
[debug] [2025-08-14T03:00:58.967Z] Command:       /usr/local/bin/node /Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/.bin/firebase deploy --only functions:setUserClaims
[debug] [2025-08-14T03:00:58.967Z] CLI Version:   14.12.0
[debug] [2025-08-14T03:00:58.967Z] Platform:      darwin
[debug] [2025-08-14T03:00:58.967Z] Node Version:  v22.18.0
[debug] [2025-08-14T03:00:58.968Z] Time:          Wed Aug 13 2025 23:00:58 GMT-0400 (Eastern Daylight Saving Time)
[debug] [2025-08-14T03:00:58.968Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-08-14T03:00:59.166Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:00:59.166Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:00:59.167Z] [iam] checking project um-shotbuilder for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2025-08-14T03:00:59.168Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.168Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.169Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:00:59.169Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:00:59.169Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:00:59.522Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:00:59.523Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:00:59.523Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.523Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.523Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2025-08-14T03:00:59.523Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2025-08-14T03:00:59.724Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions 404
[debug] [2025-08-14T03:00:59.724Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}}
[debug] [2025-08-14T03:00:59.724Z] [functions] service account IAM check errored, deploy may fail: Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account","status":404}
[info] 
[info] === Deploying to 'um-shotbuilder'...
[info] 
[info] i  deploying functions 
[debug] [2025-08-14T03:00:59.727Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.727Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:00:59.727Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudresourcemanager.googleapis.com [none]
[debug] [2025-08-14T03:00:59.727Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudresourcemanager.googleapis.com x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:01:00.262Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudresourcemanager.googleapis.com 200
[debug] [2025-08-14T03:01:00.263Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudresourcemanager.googleapis.com [omitted]
[debug] [2025-08-14T03:01:00.284Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.284Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.284Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:01:00.411Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:01:00.411Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:00.413Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.413Z] Checked if tokens are valid: true, expires at: 1755141565297
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:00.414Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.414Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.414Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudbuild.googleapis.com [none]
[debug] [2025-08-14T03:01:00.414Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudbuild.googleapis.com x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:01:00.415Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/artifactregistry.googleapis.com [none]
[debug] [2025-08-14T03:01:00.415Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/artifactregistry.googleapis.com x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:01:00.812Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudbuild.googleapis.com 200
[debug] [2025-08-14T03:01:00.812Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/cloudbuild.googleapis.com [omitted]
[info] ✔  functions: required API cloudbuild.googleapis.com is enabled 
[debug] [2025-08-14T03:01:00.862Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/artifactregistry.googleapis.com 200
[debug] [2025-08-14T03:01:00.862Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/artifactregistry.googleapis.com [omitted]
[info] ✔  artifactregistry: required API artifactregistry.googleapis.com is enabled 
[debug] [2025-08-14T03:01:00.904Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.904Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:00.904Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig [none]
[debug] [2025-08-14T03:01:01.323Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig 200
[debug] [2025-08-14T03:01:01.323Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig {"projectId":"um-shotbuilder","storageBucket":"um-shotbuilder.firebasestorage.app"}
[debug] [2025-08-14T03:01:01.323Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:01.323Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:01.323Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs [none]
[debug] [2025-08-14T03:01:01.631Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs 200
[debug] [2025-08-14T03:01:01.632Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs {}
[debug] [2025-08-14T03:01:01.633Z] Validating nodejs source
[debug] [2025-08-14T03:01:02.269Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "22"
  },
  "main": "index.js",
  "dependencies": {
    "firebase-admin": "^12.6.0",
    "firebase-functions": "^6.0.1"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.1.0"
  },
  "private": true
}
[debug] [2025-08-14T03:01:02.270Z] Building nodejs source
[info] i  functions: Loading and analyzing source code for codebase default to determine what to deploy 
[debug] [2025-08-14T03:01:02.271Z] Could not find functions.yaml. Must use http discovery
[debug] [2025-08-14T03:01:02.279Z] Found firebase-functions binary at '/Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8206

[debug] [2025-08-14T03:01:03.040Z] Got response from /__/functions.yaml {"endpoints":{"setUserClaims":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","region":["northamerica-northeast1"],"labels":{},"callableTrigger":{},"entryPoint":"setUserClaims"}},"specVersion":"v1alpha1","requiredAPIs":[],"extensions":{}}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:07.065Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.065Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.065Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/firebaseextensions.googleapis.com [none]
[debug] [2025-08-14T03:01:07.065Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:01:07.677Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/firebaseextensions.googleapis.com 200
[debug] [2025-08-14T03:01:07.677Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/um-shotbuilder/services/firebaseextensions.googleapis.com [omitted]
[info] ✔  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2025-08-14T03:01:07.735Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:01:07.735Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:01:07.736Z] [iam] checking project um-shotbuilder for permissions ["firebase.projects.get","firebaseextensions.instances.list"]
[debug] [2025-08-14T03:01:07.736Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.736Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.736Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:01:07.736Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:01:07.736Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:01:07.988Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:01:07.988Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:01:07.989Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.989Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:07.989Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances pageSize=100&pageToken=
[debug] [2025-08-14T03:01:08.346Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances 200
[debug] [2025-08-14T03:01:08.346Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances {"instances":[{"name":"projects/um-shotbuilder/instances/storage-resize-images","createTime":"2025-08-13T05:38:44.331851Z","updateTime":"2025-08-13T05:51:17.493226Z","state":"ACTIVE","config":{"name":"projects/um-shotbuilder/instances/storage-resize-images/configurations/d64fa385-04b8-4578-891b-8fe93b0035d5","createTime":"2025-08-13T05:38:44.331851Z","source":{"name":"projects/firebaseextensions/sources/c03afa8e-540f-426c-a166-9847baab3bde","packageUri":"https://storage.googleapis.com/firebase-extensions-packages-prod/firebase-storage-resize-images-0.2.10-86ff3989-54cf-4e0a-a62b-357e4d79341f.zip","hash":"dfdb66afac0b03e9c27e8a1449d8076dd367cc29286e3356c8052056a1031e23","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.2.10","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"},{"role":"aiplatform.user","reason":"Allows use of Gemini models for AI content filtering, if enabled."}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nruntime: nodejs20\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nruntime: nodejs20\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed","validationRegex":"^([^\\/.]*|)$","validationErrorMessage":"Values cannot include \"/\", \".\"."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"SHARP_OPTIONS","label":"Sharp constructor options for resizing images","type":"STRING","description":"Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"},{"value":"4096","label":"4 GB"},{"value":"8192","label":"8 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]},{"param":"BACKFILL_BATCH_SIZE","label":"Backfill batch size","type":"STRING","description":"The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nwarning: Ensure your function has enough memory to handle the batch size.\n","default":"3","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"Please provide a valid number."},{"param":"REGENERATE_TOKEN","label":"Assign new access token","type":"SELECT","description":"Should resized images have a new access token assigned to them,  different from the original image?\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"CONTENT_FILTER_LEVEL","label":"Content filter level","type":"SELECT","description":"Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n","required":true,"options":[{"value":"OFF","label":"Off (No filtering)"},{"value":"BLOCK_ONLY_HIGH","label":"Low strictness (Block only high severity content)"},{"value":"BLOCK_MEDIUM_AND_ABOVE","label":"Medium strictness (Block medium and high severity content)"},{"value":"BLOCK_LOW_AND_ABOVE","label":"High strictness (Block low, medium, and high severity content)"}],"default":"OFF"},{"param":"CUSTOM_FILTER_PROMPT","label":"Custom content filter prompt","type":"STRING","description":"Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n","example":"Does this image contain violent or threatening content?"},{"param":"PLACEHOLDER_IMAGE_PATH","label":"Path to placeholder image","type":"STRING","description":"Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n","example":"placeholders/blocked-content.jpg","validationRegex":"^([a-zA-Z0-9_\\-\\./]+)\\.(png|jpg|jpeg|gif|webp)$","validationErrorMessage":"Please provide a valid image path within your bucket."}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n\n\n* Sharp constructor options for resizing images: Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n* Backfill batch size: The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nWARNING: Ensure your function has enough memory to handle the batch size.\n\n\n* Assign new access token: Should resized images have a new access token assigned to them,  different from the original image?\n\n\n* Content filter level: Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n\n\n* Custom content filter prompt: Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n\n\n* Path to placeholder image: Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n\n* aiplatform.user (Reason: Allows use of Gemini models for AI content filtering, if enabled.)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.onStart","description":"Occurs when a trigger has been called within the Extension, and will include data such as the context of the trigger request."},{"type":"firebase.extensions.storage-resize-images.v1.onSuccess","description":"Occurs when image resizing completes successfully. The event will contain further details about specific formats and sizes."},{"type":"firebase.extensions.storage-resize-images.v1.onError","description":"Occurs when an issue has been experienced in the Extension. This will include any error data that has been included within the Error Exception."},{"type":"firebase.extensions.storage-resize-images.v1.onCompletion","description":"Occurs when the function is settled. Provides no customized data other than the context."}]},"fetchTime":"2025-07-24T13:41:02.337103Z","lastOperationName":"projects/firebaseextensions/operations/ef38492d-7bc9-4230-a861-099dc0440455","state":"ACTIVE"},"params":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DELETE_ORIGINAL_FILE":"false","IS_ANIMATED":"true","FUNCTION_MEMORY":"1024","DO_BACKFILL":"true","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","INCLUDE_PATH_LIST":"/images","FAILED_IMAGES_PATH":"failed","IMAGE_TYPE":"false","REGENERATE_TOKEN":"true","IMG_SIZES":"200x200,600x600","MAKE_PUBLIC":"false"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/um-shotbuilder/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `um-shotbuilder.firebasestorage.app`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `um-shotbuilder.firebasestorage.app`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `um-shotbuilder.firebasestorage.app` (and, if configured, under the path `{ unspecified parameter }`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","extensionRef":"firebase/storage-resize-images","extensionVersion":"0.2.10","systemParams":{"firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/location":"northamerica-northeast1"}},"lastOperationName":"projects/um-shotbuilder/operations/252d1cc3-c00e-4241-8468-e669ee0f088f","serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"aa6907c27a318f50275ca770d26682fdf18a811e2bc0c1bca952614650eb1aad","runtimeData":{"stateUpdateTime":"2025-08-13T05:51:17.260331539Z","processingState":{"state":"PROCESSING","detailMessage":"Resizing existing images in um-shotbuilder.firebasestorage.app"}}}]}
[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions (77.19 KB) for uploading 
[debug] [2025-08-14T03:01:08.412Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:08.412Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:08.412Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions [none]
[debug] [2025-08-14T03:01:08.997Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:01:08.997Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions {"functions":[{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-backfillResizedImages","description":"Handles tasks from startBackfill to resize existing images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","httpsTrigger":{"url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/ext-storage-resize-images-backfillResizedImages","securityLevel":"SECURE_OPTIONAL"},"status":"OFFLINE","entryPoint":"backfillResizedImages","timeout":"540s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:55.065921136Z","versionId":"2","labels":{"goog-dm":"firebase-ext-storage-resize-images","goog-firebase-ext":"storage-resize-images","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","ingressSettings":"ALLOW_ALL","buildId":"f20073eb-b551-4af2-b740-539614f0c331","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/f20073eb-b551-4af2-b740-539614f0c331","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"},{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-generateResizedImage","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","eventTrigger":{"eventType":"google.storage.object.finalize","resource":"projects/_/buckets/um-shotbuilder.firebasestorage.app","service":"storage.googleapis.com","failurePolicy":{}},"status":"OFFLINE","entryPoint":"generateResizedImage","timeout":"60s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:56.610939186Z","versionId":"2","labels":{"goog-firebase-ext":"storage-resize-images","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled","goog-dm":"firebase-ext-storage-resize-images"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","maxInstances":3000,"ingressSettings":"ALLOW_INTERNAL_ONLY","buildId":"b4570cef-caa1-459c-8387-de874384d3ed","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/b4570cef-caa1-459c-8387-de874384d3ed","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"}]}
[debug] [2025-08-14T03:01:08.998Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:08.998Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:08.998Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2025-08-14T03:01:09.456Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:01:09.456Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions {}
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:09.458Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.458Z] Checked if tokens are valid: true, expires at: 1755141565297
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.459Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.459Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com [none]
[debug] [2025-08-14T03:01:09.459Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.459Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com [none]
[debug] [2025-08-14T03:01:09.459Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.461Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/pubsub.googleapis.com [none]
[debug] [2025-08-14T03:01:09.461Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/pubsub.googleapis.com x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.462Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/storage.googleapis.com [none]
[debug] [2025-08-14T03:01:09.462Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/storage.googleapis.com x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.822Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com 200
[debug] [2025-08-14T03:01:09.822Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com [omitted]
[warn] ⚠  functions: missing required API run.googleapis.com. Enabling now... 
[debug] [2025-08-14T03:01:09.822Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.822Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.822Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com:enable [none]
[debug] [2025-08-14T03:01:09.822Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com:enable x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.903Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/storage.googleapis.com 200
[debug] [2025-08-14T03:01:09.904Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/storage.googleapis.com [omitted]
[info] ✔  functions: required API storage.googleapis.com is enabled 
[debug] [2025-08-14T03:01:09.963Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com 200
[debug] [2025-08-14T03:01:09.963Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com [omitted]
[warn] ⚠  functions: missing required API eventarc.googleapis.com. Enabling now... 
[debug] [2025-08-14T03:01:09.963Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.963Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:09.963Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com:enable [none]
[debug] [2025-08-14T03:01:09.963Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com:enable x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:09.965Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/pubsub.googleapis.com 200
[debug] [2025-08-14T03:01:09.965Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/168065141847/services/pubsub.googleapis.com [omitted]
[info] ✔  functions: required API pubsub.googleapis.com is enabled 
[debug] [2025-08-14T03:01:10.683Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com:enable 200
[debug] [2025-08-14T03:01:10.683Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/run.googleapis.com:enable [omitted]
[debug] [2025-08-14T03:01:10.724Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com:enable 200
[debug] [2025-08-14T03:01:10.724Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/168065141847/services/eventarc.googleapis.com:enable [omitted]
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[debug] [2025-08-14T03:01:20.745Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:20.745Z] Checked if tokens are valid: true, expires at: 1755141565297
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2025-08-14T03:01:20.745Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:20.746Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:20.746Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:01:20.746Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:20.746Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:01:20.749Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:01:20.749Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:01:20.749Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:01:21.432Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:01:21.432Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"105341289041531266520"}}
[debug] [2025-08-14T03:01:21.507Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:01:21.507Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"107392028812519324335"}}
[debug] [2025-08-14T03:01:21.509Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.509Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.510Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:01:21.793Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:01:21.793Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[debug] [2025-08-14T03:01:21.793Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.794Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.794Z] >>> [apiv2][query] GET https://compute.googleapis.com/compute/v1/projects/168065141847 [none]
[debug] [2025-08-14T03:01:21.947Z] <<< [apiv2][status] GET https://compute.googleapis.com/compute/v1/projects/168065141847 403
[debug] [2025-08-14T03:01:21.947Z] <<< [apiv2][body] GET https://compute.googleapis.com/compute/v1/projects/168065141847 {"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"containerInfo":"168065141847","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}}
[debug] [2025-08-14T03:01:21.947Z] unable to look up default compute service account. Falling back to 168065141847-compute@developer.gserviceaccount.com. Error: {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"containerInfo":"168065141847","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}},"response":{"statusCode":403}},"exit":1,"message":"Request to https://compute.googleapis.com/compute/v1/projects/168065141847 had HTTP Error: 403, Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","status":403}
[debug] [2025-08-14T03:01:21.948Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.949Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:21.949Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo [none]
[debug] [2025-08-14T03:01:22.157Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo 200
[debug] [2025-08-14T03:01:22.158Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo {"name":"projects/um-shotbuilder/billingInfo","projectId":"um-shotbuilder","billingAccountName":"billingAccounts/014C3F-A59F97-ACBC37","billingEnabled":true}
[debug] [2025-08-14T03:01:22.159Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:22.159Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:22.159Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl [none]
[debug] [2025-08-14T03:01:23.321Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl 200
[debug] [2025-08-14T03:01:23.321Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip?GoogleAccessId=service-168065141847@gcf-admin-robot.iam.gserviceaccount.com&Expires=1755142283&Signature=JmsdY5ExSF3ag1ou%2BFPuMVzIoVRzyitP7SMyhX9sZM683h%2FztGn3HtWGwgQiXqOywmr%2BuRXCiyWhQmlYWZcJPeQSyvxN348iC%2F9F8DMgojseEPuhLenASnkVnDHthm1gZhwcjVV3rCJ22IlVcUNu91YpSAbATHdLlV7YdxbVG0yRHxitUeae4t5dRpSvTTSBsThHV%2FCFBoo9LAy%2Bzh0Ufg7qt4tAC6XZKJzq2zPZ6Go70niLrcuFj01GXUfJ3NesZSq5X5CQNUZcXEun28BxXFhT5qd0TZXrCp1O6G2A6cffuOuoRW4dL5Cv1VN%2B6bpCinmg7SIFYjKX9YaBshbtuA%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip"}}
[debug] [2025-08-14T03:01:23.322Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip GoogleAccessId=service-168065141847%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1755142283&Signature=JmsdY5ExSF3ag1ou%2BFPuMVzIoVRzyitP7SMyhX9sZM683h%2FztGn3HtWGwgQiXqOywmr%2BuRXCiyWhQmlYWZcJPeQSyvxN348iC%2F9F8DMgojseEPuhLenASnkVnDHthm1gZhwcjVV3rCJ22IlVcUNu91YpSAbATHdLlV7YdxbVG0yRHxitUeae4t5dRpSvTTSBsThHV%2FCFBoo9LAy%2Bzh0Ufg7qt4tAC6XZKJzq2zPZ6Go70niLrcuFj01GXUfJ3NesZSq5X5CQNUZcXEun28BxXFhT5qd0TZXrCp1O6G2A6cffuOuoRW4dL5Cv1VN%2B6bpCinmg7SIFYjKX9YaBshbtuA%3D%3D
[debug] [2025-08-14T03:01:23.322Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip [stream]
[debug] [2025-08-14T03:01:23.501Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip 200
[debug] [2025-08-14T03:01:23.502Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] i  functions: creating Node.js 22 (2nd Gen) function setUserClaims(northamerica-northeast1)... 
[debug] [2025-08-14T03:01:23.505Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:23.505Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:23.506Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions functionId=setUserClaims
[debug] [2025-08-14T03:01:23.506Z] >>> [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"ffce0302-dcb6-4b1c-8b8d-bea218a5451b.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""}},"serviceConfig":{"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":null,"timeoutSeconds":null,"serviceAccountEmail":null,"availableMemory":"256Mi","minInstanceCount":null,"maxInstanceCount":null,"maxInstanceRequestConcurrency":80,"availableCpu":"1","vpcConnector":null,"vpcConnectorEgressSettings":null},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"}}
[debug] [2025-08-14T03:01:24.806Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions 200
[debug] [2025-08-14T03:01:24.806Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2"},"done":false}
[debug] [2025-08-14T03:01:24.807Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:24.807Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:24.807Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:24.979Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:24.979Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:01:25.480Z] [create-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:01:25.480Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:25.481Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:25.481Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:25.554Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:25.554Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:01:26.554Z] [create-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:01:26.555Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:26.555Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:26.555Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:26.631Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:26.631Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/afc5306d-73ea-437a-bfda-73d20455269d?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d"},"done":false}
[debug] [2025-08-14T03:01:28.632Z] [create-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:01:28.632Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:28.633Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:28.633Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:28.797Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:28.798Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/afc5306d-73ea-437a-bfda-73d20455269d?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d"},"done":false}
[debug] [2025-08-14T03:01:32.799Z] [create-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:01:32.799Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:32.799Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:32.799Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:32.982Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:32.982Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/afc5306d-73ea-437a-bfda-73d20455269d?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"CREATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d"},"done":false}
[debug] [2025-08-14T03:01:40.982Z] [create-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:01:40.982Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:40.982Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:40.982Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 [none]
[debug] [2025-08-14T03:01:41.167Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 200
[debug] [2025-08-14T03:01:41.167Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755140484042-63c4a7d150fc1-d4b5e6e7-47313ca3","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:01:25.165779329Z","endTime":"2025-08-14T03:01:40.162867778Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"create","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"environment":"GEN_2"},"stages":[{"name":"ARTIFACT_REGISTRY","message":"Deleting function artifacts in Artifact Registry","state":"COMPLETE"},{"name":"SERVICE","message":"Deleting Cloud Run service","state":"COMPLETE","resource":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims"}],"operationType":"CREATE_FUNCTION"},"done":true,"error":{"code":3,"message":"Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/afc5306d-73ea-437a-bfda-73d20455269d?project=168065141847.\n"}}
[debug] [2025-08-14T03:01:41.167Z] Got source token undefined for region northamerica-northeast1
[error] Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account
 You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/afc5306d-73ea-437a-bfda-73d20455269d?project=168065141847.

[debug] [2025-08-14T03:01:41.168Z] Total Function Deployment time: 17664
[debug] [2025-08-14T03:01:41.168Z] 1 Functions Deployed
[debug] [2025-08-14T03:01:41.168Z] 1 Functions Errored
[debug] [2025-08-14T03:01:41.168Z] 0 Function Deployments Aborted
[debug] [2025-08-14T03:01:41.168Z] Average Function Deployment time: 17664
[info] 
[info] Functions deploy had errors with the following functions:
	setUserClaims(northamerica-northeast1)
[debug] [2025-08-14T03:01:41.169Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:41.169Z] Checked if tokens are valid: true, expires at: 1755141565297
[debug] [2025-08-14T03:01:41.169Z] >>> [apiv2][query] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts [none]
[debug] [2025-08-14T03:01:41.464Z] <<< [apiv2][status] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts 200
[debug] [2025-08-14T03:01:41.464Z] <<< [apiv2][body] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","format":"DOCKER","description":"This repository is created and used by Cloud Functions for storing function docker images.","labels":{"goog-managed-by":"cloudfunctions"},"createTime":"2025-08-13T05:04:00.613753Z","updateTime":"2025-08-13T05:04:00.613753Z","mode":"STANDARD_REPOSITORY","vulnerabilityScanningConfig":{"lastEnableTime":"2025-08-13T05:03:51.845593405Z","enablementState":"SCANNING_DISABLED","enablementStateReason":"API containerscanning.googleapis.com is not enabled."},"registryUri":"northamerica-northeast1-docker.pkg.dev/um-shotbuilder/gcf-artifacts"}
[warn] ⚠  functions: No cleanup policy detected for repositories in northamerica-northeast1. This may result in a small monthly bill as container images accumulate over time. 
[debug] [2025-08-14T03:28:51.002Z] ----------------------------------------------------------------------
[debug] [2025-08-14T03:28:51.006Z] Command:       /usr/local/bin/node /Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/.bin/firebase deploy --only functions:setUserClaims
[debug] [2025-08-14T03:28:51.006Z] CLI Version:   14.12.0
[debug] [2025-08-14T03:28:51.006Z] Platform:      darwin
[debug] [2025-08-14T03:28:51.006Z] Node Version:  v22.18.0
[debug] [2025-08-14T03:28:51.007Z] Time:          Wed Aug 13 2025 23:28:51 GMT-0400 (Eastern Daylight Saving Time)
[debug] [2025-08-14T03:28:51.007Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-08-14T03:28:51.173Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:28:51.173Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:28:51.173Z] [iam] checking project um-shotbuilder for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2025-08-14T03:28:51.174Z] Checked if tokens are valid: false, expires at: 1755141565297
[debug] [2025-08-14T03:28:51.174Z] Checked if tokens are valid: false, expires at: 1755141565297
[debug] [2025-08-14T03:28:51.174Z] > refreshing access token with scopes: []
[debug] [2025-08-14T03:28:51.175Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2025-08-14T03:28:51.175Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-08-14T03:28:51.400Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2025-08-14T03:28:51.400Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-08-14T03:28:51.448Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:28:51.448Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:28:51.449Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:28:51.820Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:28:51.820Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:28:51.820Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:51.821Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:51.821Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2025-08-14T03:28:51.821Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2025-08-14T03:28:52.036Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions 404
[debug] [2025-08-14T03:28:52.036Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}}
[debug] [2025-08-14T03:28:52.037Z] [functions] service account IAM check errored, deploy may fail: Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account","status":404}
[info] 
[info] === Deploying to 'um-shotbuilder'...
[info] 
[info] i  deploying functions 
[debug] [2025-08-14T03:28:52.041Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.041Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.041Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:28:52.222Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:28:52.222Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2025-08-14T03:28:52.225Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.225Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.225Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig [none]
[debug] [2025-08-14T03:28:52.638Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig 200
[debug] [2025-08-14T03:28:52.639Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig {"projectId":"um-shotbuilder","storageBucket":"um-shotbuilder.firebasestorage.app"}
[debug] [2025-08-14T03:28:52.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:52.639Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs [none]
[debug] [2025-08-14T03:28:52.870Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs 200
[debug] [2025-08-14T03:28:52.870Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs {}
[debug] [2025-08-14T03:28:52.872Z] Validating nodejs source
[debug] [2025-08-14T03:28:53.350Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "22"
  },
  "main": "index.js",
  "dependencies": {
    "firebase-admin": "^12.6.0",
    "firebase-functions": "^6.0.1"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.1.0"
  },
  "private": true
}
[debug] [2025-08-14T03:28:53.350Z] Building nodejs source
[info] i  functions: Loading and analyzing source code for codebase default to determine what to deploy 
[debug] [2025-08-14T03:28:53.351Z] Could not find functions.yaml. Must use http discovery
[debug] [2025-08-14T03:28:53.361Z] Found firebase-functions binary at '/Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8685

[debug] [2025-08-14T03:28:53.892Z] Got response from /__/functions.yaml {"endpoints":{"setUserClaims":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","region":["northamerica-northeast1"],"labels":{},"callableTrigger":{},"entryPoint":"setUserClaims"}},"specVersion":"v1alpha1","requiredAPIs":[],"extensions":{}}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2025-08-14T03:28:57.915Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:28:57.915Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:28:57.915Z] [iam] checking project um-shotbuilder for permissions ["firebase.projects.get","firebaseextensions.instances.list"]
[debug] [2025-08-14T03:28:57.915Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:57.915Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:57.915Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:28:57.915Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:28:57.915Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:28:58.177Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:28:58.177Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:28:58.177Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:58.177Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:58.178Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances pageSize=100&pageToken=
[debug] [2025-08-14T03:28:58.543Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances 200
[debug] [2025-08-14T03:28:58.544Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances {"instances":[{"name":"projects/um-shotbuilder/instances/storage-resize-images","createTime":"2025-08-13T05:38:44.331851Z","updateTime":"2025-08-13T05:51:17.493226Z","state":"ACTIVE","config":{"name":"projects/um-shotbuilder/instances/storage-resize-images/configurations/d64fa385-04b8-4578-891b-8fe93b0035d5","createTime":"2025-08-13T05:38:44.331851Z","source":{"name":"projects/firebaseextensions/sources/c03afa8e-540f-426c-a166-9847baab3bde","packageUri":"https://storage.googleapis.com/firebase-extensions-packages-prod/firebase-storage-resize-images-0.2.10-86ff3989-54cf-4e0a-a62b-357e4d79341f.zip","hash":"dfdb66afac0b03e9c27e8a1449d8076dd367cc29286e3356c8052056a1031e23","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.2.10","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"},{"role":"aiplatform.user","reason":"Allows use of Gemini models for AI content filtering, if enabled."}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nruntime: nodejs20\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nruntime: nodejs20\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed","validationRegex":"^([^\\/.]*|)$","validationErrorMessage":"Values cannot include \"/\", \".\"."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"SHARP_OPTIONS","label":"Sharp constructor options for resizing images","type":"STRING","description":"Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"},{"value":"4096","label":"4 GB"},{"value":"8192","label":"8 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]},{"param":"BACKFILL_BATCH_SIZE","label":"Backfill batch size","type":"STRING","description":"The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nwarning: Ensure your function has enough memory to handle the batch size.\n","default":"3","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"Please provide a valid number."},{"param":"REGENERATE_TOKEN","label":"Assign new access token","type":"SELECT","description":"Should resized images have a new access token assigned to them,  different from the original image?\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"CONTENT_FILTER_LEVEL","label":"Content filter level","type":"SELECT","description":"Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n","required":true,"options":[{"value":"OFF","label":"Off (No filtering)"},{"value":"BLOCK_ONLY_HIGH","label":"Low strictness (Block only high severity content)"},{"value":"BLOCK_MEDIUM_AND_ABOVE","label":"Medium strictness (Block medium and high severity content)"},{"value":"BLOCK_LOW_AND_ABOVE","label":"High strictness (Block low, medium, and high severity content)"}],"default":"OFF"},{"param":"CUSTOM_FILTER_PROMPT","label":"Custom content filter prompt","type":"STRING","description":"Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n","example":"Does this image contain violent or threatening content?"},{"param":"PLACEHOLDER_IMAGE_PATH","label":"Path to placeholder image","type":"STRING","description":"Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n","example":"placeholders/blocked-content.jpg","validationRegex":"^([a-zA-Z0-9_\\-\\./]+)\\.(png|jpg|jpeg|gif|webp)$","validationErrorMessage":"Please provide a valid image path within your bucket."}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n\n\n* Sharp constructor options for resizing images: Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n* Backfill batch size: The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nWARNING: Ensure your function has enough memory to handle the batch size.\n\n\n* Assign new access token: Should resized images have a new access token assigned to them,  different from the original image?\n\n\n* Content filter level: Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n\n\n* Custom content filter prompt: Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n\n\n* Path to placeholder image: Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n\n* aiplatform.user (Reason: Allows use of Gemini models for AI content filtering, if enabled.)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.onStart","description":"Occurs when a trigger has been called within the Extension, and will include data such as the context of the trigger request."},{"type":"firebase.extensions.storage-resize-images.v1.onSuccess","description":"Occurs when image resizing completes successfully. The event will contain further details about specific formats and sizes."},{"type":"firebase.extensions.storage-resize-images.v1.onError","description":"Occurs when an issue has been experienced in the Extension. This will include any error data that has been included within the Error Exception."},{"type":"firebase.extensions.storage-resize-images.v1.onCompletion","description":"Occurs when the function is settled. Provides no customized data other than the context."}]},"fetchTime":"2025-07-24T13:41:02.337103Z","lastOperationName":"projects/firebaseextensions/operations/ef38492d-7bc9-4230-a861-099dc0440455","state":"ACTIVE"},"params":{"MAKE_PUBLIC":"false","DELETE_ORIGINAL_FILE":"false","FUNCTION_MEMORY":"1024","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","INCLUDE_PATH_LIST":"/images","FAILED_IMAGES_PATH":"failed","BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","IMAGE_TYPE":"false","IS_ANIMATED":"true","REGENERATE_TOKEN":"true","DO_BACKFILL":"true","IMG_SIZES":"200x200,600x600"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/um-shotbuilder/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `um-shotbuilder.firebasestorage.app`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `um-shotbuilder.firebasestorage.app`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `um-shotbuilder.firebasestorage.app` (and, if configured, under the path `{ unspecified parameter }`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","extensionRef":"firebase/storage-resize-images","extensionVersion":"0.2.10","systemParams":{"firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/location":"northamerica-northeast1"}},"lastOperationName":"projects/um-shotbuilder/operations/252d1cc3-c00e-4241-8468-e669ee0f088f","serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"aa6907c27a318f50275ca770d26682fdf18a811e2bc0c1bca952614650eb1aad","runtimeData":{"stateUpdateTime":"2025-08-13T05:51:17.260331539Z","processingState":{"state":"PROCESSING","detailMessage":"Resizing existing images in um-shotbuilder.firebasestorage.app"}}}]}
[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions (77.19 KB) for uploading 
[debug] [2025-08-14T03:28:58.583Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:58.583Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:58.583Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions [none]
[debug] [2025-08-14T03:28:59.187Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:28:59.187Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions {"functions":[{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-backfillResizedImages","description":"Handles tasks from startBackfill to resize existing images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","httpsTrigger":{"url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/ext-storage-resize-images-backfillResizedImages","securityLevel":"SECURE_OPTIONAL"},"status":"OFFLINE","entryPoint":"backfillResizedImages","timeout":"540s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:55.065921136Z","versionId":"2","labels":{"deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled","goog-dm":"firebase-ext-storage-resize-images","goog-firebase-ext":"storage-resize-images"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","ingressSettings":"ALLOW_ALL","buildId":"f20073eb-b551-4af2-b740-539614f0c331","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/f20073eb-b551-4af2-b740-539614f0c331","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"},{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-generateResizedImage","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","eventTrigger":{"eventType":"google.storage.object.finalize","resource":"projects/_/buckets/um-shotbuilder.firebasestorage.app","service":"storage.googleapis.com","failurePolicy":{}},"status":"OFFLINE","entryPoint":"generateResizedImage","timeout":"60s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:56.610939186Z","versionId":"2","labels":{"goog-dm":"firebase-ext-storage-resize-images","goog-firebase-ext":"storage-resize-images","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","maxInstances":3000,"ingressSettings":"ALLOW_INTERNAL_ONLY","buildId":"b4570cef-caa1-459c-8387-de874384d3ed","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/b4570cef-caa1-459c-8387-de874384d3ed","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"}]}
[debug] [2025-08-14T03:28:59.188Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:59.188Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:59.189Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2025-08-14T03:28:59.635Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:28:59.635Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions {"functions":[{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"build":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d","runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"state":"FAILED","updateTime":"2025-08-14T03:01:40.173900544Z","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims","createTime":"2025-08-14T03:01:25.160830355Z"}]}
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[debug] [2025-08-14T03:28:59.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:59.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2025-08-14T03:28:59.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:59.639Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:28:59.640Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:28:59.640Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:28:59.640Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:28:59.641Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:28:59.641Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:28:59.641Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:29:00.125Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:29:00.125Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"107392028812519324335"}}
[debug] [2025-08-14T03:29:00.154Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:29:00.154Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"105341289041531266520"}}
[debug] [2025-08-14T03:29:00.157Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.157Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.157Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:29:00.261Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:29:00.262Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[debug] [2025-08-14T03:29:00.262Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.262Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.262Z] >>> [apiv2][query] GET https://compute.googleapis.com/compute/v1/projects/168065141847 [none]
[debug] [2025-08-14T03:29:00.410Z] <<< [apiv2][status] GET https://compute.googleapis.com/compute/v1/projects/168065141847 403
[debug] [2025-08-14T03:29:00.410Z] <<< [apiv2][body] GET https://compute.googleapis.com/compute/v1/projects/168065141847 {"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"serviceTitle":"Compute Engine API","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","service":"compute.googleapis.com","containerInfo":"168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}}
[debug] [2025-08-14T03:29:00.411Z] unable to look up default compute service account. Falling back to 168065141847-compute@developer.gserviceaccount.com. Error: {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"serviceTitle":"Compute Engine API","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","service":"compute.googleapis.com","containerInfo":"168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}},"response":{"statusCode":403}},"exit":1,"message":"Request to https://compute.googleapis.com/compute/v1/projects/168065141847 had HTTP Error: 403, Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","status":403}
[debug] [2025-08-14T03:29:00.411Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.411Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.411Z] >>> [apiv2][query] GET https://compute.googleapis.com/compute/v1/projects/168065141847 [none]
[debug] [2025-08-14T03:29:00.517Z] <<< [apiv2][status] GET https://compute.googleapis.com/compute/v1/projects/168065141847 403
[debug] [2025-08-14T03:29:00.517Z] <<< [apiv2][body] GET https://compute.googleapis.com/compute/v1/projects/168065141847 {"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"service":"compute.googleapis.com","containerInfo":"168065141847","serviceTitle":"Compute Engine API","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}}
[debug] [2025-08-14T03:29:00.517Z] unable to look up default compute service account. Falling back to 168065141847-compute@developer.gserviceaccount.com. Error: {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"service":"compute.googleapis.com","containerInfo":"168065141847","serviceTitle":"Compute Engine API","consumer":"projects/168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}},"response":{"statusCode":403}},"exit":1,"message":"Request to https://compute.googleapis.com/compute/v1/projects/168065141847 had HTTP Error: 403, Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","status":403}
[debug] [2025-08-14T03:29:00.518Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.518Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.518Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo [none]
[debug] [2025-08-14T03:29:00.796Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo 200
[debug] [2025-08-14T03:29:00.796Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo {"name":"projects/um-shotbuilder/billingInfo","projectId":"um-shotbuilder","billingAccountName":"billingAccounts/014C3F-A59F97-ACBC37","billingEnabled":true}
[debug] [2025-08-14T03:29:00.798Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.798Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:00.798Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl [none]
[debug] [2025-08-14T03:29:01.084Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl 200
[debug] [2025-08-14T03:29:01.085Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/d6b38dd0-be37-4dd0-8259-62672f7665d0.zip?GoogleAccessId=service-168065141847@gcf-admin-robot.iam.gserviceaccount.com&Expires=1755143941&Signature=smM9kEhXBcWM21oxbs61%2BSS4jk4PCTX4I%2BthuUYjAP0UHz7Ihwu2ynSgdFPdPrFzsRCds%2FjoKkq5fY4mnDBpJy1aeYmhi3%2FXGxHmtS45wlMLjoX16dbHUCFSA6vZzK3FAdyXxSSKVpZH%2FZzztFueNZ2SA37KE9y6j1YlYkqdEirKtC8kDQ69djUYxAsNk27athWKckkdvDit74lQJX06jEiejo9iJySe45Bp%2FlW9h1prYGI6hUTPLtpbvUkFSOu2LwOhGk60CpmFHTCowNJJUolnsolwI%2Btgg0LtdTO7jdPPlbYsa8HJQWYSKiR%2BarMnh%2FS96i%2FbNMh%2FQ2hKMB%2BkeA%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"d6b38dd0-be37-4dd0-8259-62672f7665d0.zip"}}
[debug] [2025-08-14T03:29:01.085Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/d6b38dd0-be37-4dd0-8259-62672f7665d0.zip GoogleAccessId=service-168065141847%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1755143941&Signature=smM9kEhXBcWM21oxbs61%2BSS4jk4PCTX4I%2BthuUYjAP0UHz7Ihwu2ynSgdFPdPrFzsRCds%2FjoKkq5fY4mnDBpJy1aeYmhi3%2FXGxHmtS45wlMLjoX16dbHUCFSA6vZzK3FAdyXxSSKVpZH%2FZzztFueNZ2SA37KE9y6j1YlYkqdEirKtC8kDQ69djUYxAsNk27athWKckkdvDit74lQJX06jEiejo9iJySe45Bp%2FlW9h1prYGI6hUTPLtpbvUkFSOu2LwOhGk60CpmFHTCowNJJUolnsolwI%2Btgg0LtdTO7jdPPlbYsa8HJQWYSKiR%2BarMnh%2FS96i%2FbNMh%2FQ2hKMB%2BkeA%3D%3D
[debug] [2025-08-14T03:29:01.085Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/d6b38dd0-be37-4dd0-8259-62672f7665d0.zip [stream]
[debug] [2025-08-14T03:29:01.256Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/d6b38dd0-be37-4dd0-8259-62672f7665d0.zip 200
[debug] [2025-08-14T03:29:01.256Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/d6b38dd0-be37-4dd0-8259-62672f7665d0.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] i  functions: updating Node.js 22 (2nd Gen) function setUserClaims(northamerica-northeast1)... 
[debug] [2025-08-14T03:29:01.262Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:01.262Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:01.262Z] >>> [apiv2][query] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims updateMask=name%2CbuildConfig.runtime%2CbuildConfig.entryPoint%2CbuildConfig.source.storageSource.bucket%2CbuildConfig.source.storageSource.object%2CbuildConfig.environmentVariables%2CbuildConfig.sourceToken%2CserviceConfig.environmentVariables%2CserviceConfig.ingressSettings%2CserviceConfig.timeoutSeconds%2CserviceConfig.serviceAccountEmail%2CserviceConfig.availableMemory%2CserviceConfig.minInstanceCount%2CserviceConfig.maxInstanceCount%2CserviceConfig.maxInstanceRequestConcurrency%2CserviceConfig.availableCpu%2CserviceConfig.vpcConnector%2CserviceConfig.vpcConnectorEgressSettings%2Clabels
[debug] [2025-08-14T03:29:01.262Z] >>> [apiv2][body] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"d6b38dd0-be37-4dd0-8259-62672f7665d0.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""}},"serviceConfig":{"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":null,"timeoutSeconds":null,"serviceAccountEmail":null,"availableMemory":"256Mi","minInstanceCount":null,"maxInstanceCount":null,"maxInstanceRequestConcurrency":80,"availableCpu":"1","vpcConnector":null,"vpcConnectorEgressSettings":null},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"}}
[debug] [2025-08-14T03:29:02.233Z] <<< [apiv2][status] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims 200
[debug] [2025-08-14T03:29:02.233Z] <<< [apiv2][body] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2"},"done":false}
[debug] [2025-08-14T03:29:02.234Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:02.234Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:02.234Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:02.407Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:02.407Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:29:02.909Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:29:02.909Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:02.909Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:02.909Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:03.031Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:03.032Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:29:04.032Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:29:04.032Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:04.033Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:04.033Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:04.149Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:04.149Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65"},"done":false}
[debug] [2025-08-14T03:29:06.149Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:29:06.149Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:06.149Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:06.150Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:06.333Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:06.333Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65"},"done":false}
[debug] [2025-08-14T03:29:10.334Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:29:10.335Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:10.335Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:10.335Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:10.464Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:10.464Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65"},"done":false}
[debug] [2025-08-14T03:29:18.464Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:29:18.465Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:18.465Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:18.465Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 [none]
[debug] [2025-08-14T03:29:18.644Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 200
[debug] [2025-08-14T03:29:18.644Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7 {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142141792-63c4adfe44f90-58ed1de4-e2de26f7","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:29:02.565845168Z","endTime":"2025-08-14T03:29:18.101783305Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142142517709"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"FAILED","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":true,"error":{"code":3,"message":"Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847.\n"}}
[debug] [2025-08-14T03:29:18.644Z] Got source token undefined for region northamerica-northeast1
[error] Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account
 You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847.

[debug] [2025-08-14T03:29:18.646Z] Total Function Deployment time: 17387
[debug] [2025-08-14T03:29:18.646Z] 1 Functions Deployed
[debug] [2025-08-14T03:29:18.646Z] 1 Functions Errored
[debug] [2025-08-14T03:29:18.646Z] 0 Function Deployments Aborted
[debug] [2025-08-14T03:29:18.646Z] Average Function Deployment time: 17386
[info] 
[info] Functions deploy had errors with the following functions:
	setUserClaims(northamerica-northeast1)
[debug] [2025-08-14T03:29:18.648Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:18.648Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:18.648Z] >>> [apiv2][query] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts [none]
[debug] [2025-08-14T03:29:18.887Z] <<< [apiv2][status] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts 200
[debug] [2025-08-14T03:29:18.887Z] <<< [apiv2][body] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","format":"DOCKER","description":"This repository is created and used by Cloud Functions for storing function docker images.","labels":{"goog-managed-by":"cloudfunctions"},"createTime":"2025-08-13T05:04:00.613753Z","updateTime":"2025-08-13T05:04:00.613753Z","mode":"STANDARD_REPOSITORY","vulnerabilityScanningConfig":{"lastEnableTime":"2025-08-13T05:03:51.845593405Z","enablementState":"SCANNING_DISABLED","enablementStateReason":"API containerscanning.googleapis.com is not enabled."},"registryUri":"northamerica-northeast1-docker.pkg.dev/um-shotbuilder/gcf-artifacts"}
[warn] ⚠  functions: No cleanup policy detected for repositories in northamerica-northeast1. This may result in a small monthly bill as container images accumulate over time. 
[info] i  functions: Configuring cleanup policy for repository in northamerica-northeast1. Images older than 30 days will be automatically deleted. 
[debug] [2025-08-14T03:29:29.984Z] Setting up artifact cleanup policy for region northamerica-northeast1
[debug] [2025-08-14T03:29:29.984Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:29.984Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:29:29.984Z] >>> [apiv2][query] PATCH https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts updateMask=name%2CcleanupPolicies%2CcleanupPolicyDryRun%2Clabels
[debug] [2025-08-14T03:29:29.984Z] >>> [apiv2][body] PATCH https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","cleanupPolicies":{"firebase-functions-cleanup":{"id":"firebase-functions-cleanup","condition":{"tagState":"ANY","olderThan":"2592000s"},"action":"DELETE"}},"cleanupPolicyDryRun":false,"labels":{"goog-managed-by":"cloudfunctions"}}
[debug] [2025-08-14T03:29:30.268Z] <<< [apiv2][status] PATCH https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts 200
[debug] [2025-08-14T03:29:30.268Z] <<< [apiv2][body] PATCH https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","format":"DOCKER","description":"This repository is created and used by Cloud Functions for storing function docker images.","labels":{"goog-managed-by":"cloudfunctions"},"createTime":"2025-08-13T05:04:00.613753Z","updateTime":"2025-08-14T03:29:30.573247Z","mode":"STANDARD_REPOSITORY","cleanupPolicies":{"firebase-functions-cleanup":{"id":"firebase-functions-cleanup","action":"DELETE","condition":{"tagState":"ANY","olderThan":"2592000s"}}},"vulnerabilityScanningConfig":{"lastEnableTime":"2025-08-13T05:03:51.845593405Z","enablementState":"SCANNING_DISABLED","enablementStateReason":"API containerscanning.googleapis.com is not enabled."}}
[info] i  functions: Configured cleanup policy for repository in northamerica-northeast1. 
[debug] [2025-08-14T03:29:30.268Z] Functions deploy failed.
[debug] [2025-08-14T03:29:30.269Z] {
  "endpoint": {
    "id": "setUserClaims",
    "project": "um-shotbuilder",
    "region": "northamerica-northeast1",
    "entryPoint": "setUserClaims",
    "platform": "gcfv2",
    "runtime": "nodejs22",
    "callableTrigger": {},
    "labels": {
      "deployment-tool": "cli-firebase"
    },
    "serviceAccount": null,
    "ingressSettings": null,
    "availableMemoryMb": null,
    "timeoutSeconds": null,
    "maxInstances": null,
    "minInstances": null,
    "concurrency": 80,
    "vpc": null,
    "environmentVariables": {
      "FIREBASE_CONFIG": "{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}",
      "GCLOUD_PROJECT": "um-shotbuilder",
      "EVENTARC_CLOUD_EVENT_SOURCE": "projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims"
    },
    "codebase": "default",
    "securityLevel": "SECURE_ALWAYS",
    "cpu": 1,
    "targetedByOnly": true,
    "hash": "c6f3101195e4f43b46a5c141811b6a03225a00a0"
  },
  "op": "update",
  "original": {
    "name": "FirebaseError",
    "children": [],
    "exit": 1,
    "message": "Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847.\n",
    "original": {
      "code": 3,
      "message": "Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/a0b77c33-d867-4fcd-88e0-9e3b60d5bb65?project=168065141847.\n"
    },
    "status": 3,
    "code": 3
  }
}
[debug] [2025-08-14T03:29:30.269Z] Error: Failed to update function setUserClaims in region northamerica-northeast1
    at /Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:399:19
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Fabricator.updateV2Function (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:388:32)
    at async Fabricator.updateEndpoint (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:155:13)
    at async handle (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:89:17)
[error] 
[error] Error: There was an error deploying functions
[debug] [2025-08-14T03:39:05.163Z] ----------------------------------------------------------------------
[debug] [2025-08-14T03:39:05.167Z] Command:       /usr/local/bin/node /Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/.bin/firebase deploy --only functions:setUserClaims
[debug] [2025-08-14T03:39:05.167Z] CLI Version:   14.12.0
[debug] [2025-08-14T03:39:05.167Z] Platform:      darwin
[debug] [2025-08-14T03:39:05.167Z] Node Version:  v22.18.0
[debug] [2025-08-14T03:39:05.168Z] Time:          Wed Aug 13 2025 23:39:05 GMT-0400 (Eastern Daylight Saving Time)
[debug] [2025-08-14T03:39:05.168Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-08-14T03:39:05.357Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:39:05.358Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:39:05.358Z] [iam] checking project um-shotbuilder for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2025-08-14T03:39:05.359Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:05.359Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:05.360Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:39:05.360Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:39:05.360Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:39:05.803Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:39:05.804Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2025-08-14T03:39:05.804Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:05.804Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:05.804Z] >>> [apiv2][query] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions [none]
[debug] [2025-08-14T03:39:05.804Z] >>> [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"permissions":["iam.serviceAccounts.actAs"]}
[debug] [2025-08-14T03:39:06.205Z] <<< [apiv2][status] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions 404
[debug] [2025-08-14T03:39:06.205Z] <<< [apiv2][body] POST https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions {"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}}
[debug] [2025-08-14T03:39:06.206Z] [functions] service account IAM check errored, deploy may fail: Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":404,"message":"Unknown service account","status":"NOT_FOUND"}},"response":{"statusCode":404}},"exit":1,"message":"Request to https://iam.googleapis.com/v1/projects/um-shotbuilder/serviceAccounts/um-shotbuilder@appspot.gserviceaccount.com:testIamPermissions had HTTP Error: 404, Unknown service account","status":404}
[info] 
[info] === Deploying to 'um-shotbuilder'...
[info] 
[info] i  deploying functions 
[debug] [2025-08-14T03:39:06.210Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.210Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.210Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:39:06.300Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:39:06.300Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[info] i  functions: preparing codebase default for deployment 
[info] i  functions: ensuring required API cloudfunctions.googleapis.com is enabled... 
[info] i  functions: ensuring required API cloudbuild.googleapis.com is enabled... 
[info] i  artifactregistry: ensuring required API artifactregistry.googleapis.com is enabled... 
[debug] [2025-08-14T03:39:06.303Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.303Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.303Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig [none]
[debug] [2025-08-14T03:39:06.716Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig 200
[debug] [2025-08-14T03:39:06.717Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/um-shotbuilder/adminSdkConfig {"projectId":"um-shotbuilder","storageBucket":"um-shotbuilder.firebasestorage.app"}
[debug] [2025-08-14T03:39:06.717Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.717Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:06.717Z] >>> [apiv2][query] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs [none]
[debug] [2025-08-14T03:39:06.930Z] <<< [apiv2][status] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs 200
[debug] [2025-08-14T03:39:06.930Z] <<< [apiv2][body] GET https://runtimeconfig.googleapis.com/v1beta1/projects/um-shotbuilder/configs {}
[debug] [2025-08-14T03:39:06.931Z] Validating nodejs source
[debug] [2025-08-14T03:39:07.418Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "lint": "eslint .",
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "22"
  },
  "main": "index.js",
  "dependencies": {
    "firebase-admin": "^12.6.0",
    "firebase-functions": "^6.0.1"
  },
  "devDependencies": {
    "eslint": "^8.15.0",
    "eslint-config-google": "^0.14.0",
    "firebase-functions-test": "^3.1.0"
  },
  "private": true
}
[debug] [2025-08-14T03:39:07.418Z] Building nodejs source
[info] i  functions: Loading and analyzing source code for codebase default to determine what to deploy 
[debug] [2025-08-14T03:39:07.420Z] Could not find functions.yaml. Must use http discovery
[debug] [2025-08-14T03:39:07.430Z] Found firebase-functions binary at '/Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions/node_modules/.bin/firebase-functions'
[info] Serving at port 8875

[debug] [2025-08-14T03:39:07.763Z] Got response from /__/functions.yaml {"endpoints":{"setUserClaims":{"availableMemoryMb":null,"timeoutSeconds":null,"minInstances":null,"maxInstances":null,"ingressSettings":null,"concurrency":null,"serviceAccountEmail":null,"vpc":null,"platform":"gcfv2","region":["northamerica-northeast1"],"labels":{},"callableTrigger":{},"entryPoint":"setUserClaims"}},"specVersion":"v1alpha1","requiredAPIs":[],"extensions":{}}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2025-08-14T03:39:11.788Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-08-14T03:39:11.788Z] > authorizing via signed-in user (ted@immediategroup.ca)
[debug] [2025-08-14T03:39:11.788Z] [iam] checking project um-shotbuilder for permissions ["firebase.projects.get","firebaseextensions.instances.list"]
[debug] [2025-08-14T03:39:11.788Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:11.788Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:11.788Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions [none]
[debug] [2025-08-14T03:39:11.788Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions x-goog-quota-user=projects/um-shotbuilder
[debug] [2025-08-14T03:39:11.789Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:39:12.023Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions 200
[debug] [2025-08-14T03:39:12.023Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2025-08-14T03:39:12.024Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:12.024Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:12.024Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances pageSize=100&pageToken=
[debug] [2025-08-14T03:39:12.343Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances 200
[debug] [2025-08-14T03:39:12.343Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/um-shotbuilder/instances {"instances":[{"name":"projects/um-shotbuilder/instances/storage-resize-images","createTime":"2025-08-13T05:38:44.331851Z","updateTime":"2025-08-13T05:51:17.493226Z","state":"ACTIVE","config":{"name":"projects/um-shotbuilder/instances/storage-resize-images/configurations/d64fa385-04b8-4578-891b-8fe93b0035d5","createTime":"2025-08-13T05:38:44.331851Z","source":{"name":"projects/firebaseextensions/sources/c03afa8e-540f-426c-a166-9847baab3bde","packageUri":"https://storage.googleapis.com/firebase-extensions-packages-prod/firebase-storage-resize-images-0.2.10-86ff3989-54cf-4e0a-a62b-357e4d79341f.zip","hash":"dfdb66afac0b03e9c27e8a1449d8076dd367cc29286e3356c8052056a1031e23","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.2.10","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"},{"role":"aiplatform.user","reason":"Allows use of Gemini models for AI content filtering, if enabled."}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nruntime: nodejs20\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nruntime: nodejs20\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed","validationRegex":"^([^\\/.]*|)$","validationErrorMessage":"Values cannot include \"/\", \".\"."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"SHARP_OPTIONS","label":"Sharp constructor options for resizing images","type":"STRING","description":"Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid JSON object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"},{"value":"4096","label":"4 GB"},{"value":"8192","label":"8 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]},{"param":"BACKFILL_BATCH_SIZE","label":"Backfill batch size","type":"STRING","description":"The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nwarning: Ensure your function has enough memory to handle the batch size.\n","default":"3","validationRegex":"^[1-9][0-9]*$","validationErrorMessage":"Please provide a valid number."},{"param":"REGENERATE_TOKEN","label":"Assign new access token","type":"SELECT","description":"Should resized images have a new access token assigned to them,  different from the original image?\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"CONTENT_FILTER_LEVEL","label":"Content filter level","type":"SELECT","description":"Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n","required":true,"options":[{"value":"OFF","label":"Off (No filtering)"},{"value":"BLOCK_ONLY_HIGH","label":"Low strictness (Block only high severity content)"},{"value":"BLOCK_MEDIUM_AND_ABOVE","label":"Medium strictness (Block medium and high severity content)"},{"value":"BLOCK_LOW_AND_ABOVE","label":"High strictness (Block low, medium, and high severity content)"}],"default":"OFF"},{"param":"CUSTOM_FILTER_PROMPT","label":"Custom content filter prompt","type":"STRING","description":"Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n","example":"Does this image contain violent or threatening content?"},{"param":"PLACEHOLDER_IMAGE_PATH","label":"Path to placeholder image","type":"STRING","description":"Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n","example":"placeholders/blocked-content.jpg","validationRegex":"^([a-zA-Z0-9_\\-\\./]+)\\.(png|jpg|jpeg|gif|webp)$","validationErrorMessage":"Please provide a valid image path within your bucket."}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event, which you can optionally enable when you install the extension. If you enable events, you can write custom event handlers that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\nFurthermore, you can choose if you want to receive events upon the successful completion of the image resizing. Hence, you can do anything based on the event you will receive. For example, you can use [EventArc gen2 functions](https://firebase.google.com/docs/functions/custom-events#handle-events) to be triggered on events published by the extension.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Content Filtering\n\nThis extension includes an optional content filtering system to automatically detect and block inappropriate images before resizing them. This feature leverages Google's AI models to analyze uploaded images and take action based on your specified filtering level.\n\n##### Content Filter Levels\n\nYou can configure the strictness of content filtering according to your needs:\n\n- **Off**: No content filtering is applied; all images will be processed.\n- **Low strictness**: Blocks only high-severity inappropriate content.\n- **Medium strictness**: Blocks medium and high severity inappropriate content.\n- **High strictness**: Blocks all low, medium, and high severity inappropriate content.\n\n##### Custom Filter Prompts\n\nBeyond the standard content filtering categories, you can define custom filtering criteria by providing a yes/no question as a prompt. For example:\n\n- \"Does this image contain a company logo?\"\n- \"Does this image show violent or threatening content?\"\n- \"Is this image inappropriate for children?\"\n\nThe AI model will evaluate each image against your custom prompt, and only images that meet the criteria will be processed. This provides an additional layer of filtering beyond the standard content categories.\n\n##### Placeholder Images\n\nWhen an image is blocked by content filtering, the extension will automatically replace it with a placeholder image before processing. You have two options:\n\n1. **Default placeholder**: If no custom placeholder is specified, the extension will use a built-in default placeholder image.\n\n2. **Custom placeholder**: You can provide a path to your own placeholder image within your storage bucket. This lets you use a branded or contextually appropriate image when content is blocked.\n\n##### Implementation Details\n\nWhen an image fails content filtering:\n\n1. The original image is not resized.\n2. The placeholder image (default or custom) is used for generating all configured resized versions.\n3. If you've configured a failed images path, the original image is moved to that location with metadata indicating it was blocked by content filtering.\n4. If events are enabled, an event is emitted with information about the content filtering result.\n\n##### Benefits of Content Filtering\n\n- **Brand protection**: Prevents inappropriate content from being associated with your application.\n- **User safety**: Creates a safer environment for your users by filtering harmful content.\n- **Compliance**: Helps meet regulatory requirements for content moderation.\n- **Resource optimization**: Saves processing resources by not resizing inappropriate content.\n\n##### Considerations\n\n- Content filtering adds processing overhead to the image resizing workflow.\n- AI-based filtering is not flawless, and may occasionally produce false positives or negatives.\n- For sensitive applications, consider implementing additional review processes for edge cases.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Example Event Handler for Successful Resize Operation\nHere is a an example of a custom event handler for events you can choose to emit from this extension:\n```typescript\nimport * as functions from 'firebase-functions';\nimport { onCustomEventPublished } from 'firebase-functions/v2/eventarc';\n\nexport const onImageResized = onCustomEventPublished(\n    \"firebase.extensions.storage-resize-images.v1.onSuccess\",\n    (event) => {\n        functions.logger.info(\"Resize Image is successful\", event);\n        // Additional operations based on the event data can be performed here\n        return Promise.resolve();\n    }\n);\n```\n\n#### AI-powered image moderation with Genkit\n\nThis extension uses the [Genkit SDK](https://genkit.dev/) to power AI-based content filtering for uploaded images. \n\nFor more information about Genkit, visit the Genkit documentation at [genkit.dev](http://genkit.dev/).\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket, leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide an optional output option as a stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"palette\": true }}` and `{\"png\":{\"compressionLevel\":9}}`. The `\"compressionLevel\": 9` specifies the level of compression for PNG images. Higher numbers here indicate greater compression, leading to smaller file sizes at the cost of potentially increased processing time and possible loss of image quality.\n\n\n* Sharp constructor options for resizing images: Provide an optional stringified Sharp ResizeOptions object to customize resizing behavior, eg. `{ \"fastShrinkOnLoad\": false, \"position\": “centre”, \"fit\": \"inside\" }` The `\"fit\": \"inside\"` option ensures the image fits within given dimensions, maintaining aspect ratio, scaling down as needed without cropping or distortion. Learn more about [`Sharp constructor options`](https://sharp.pixelplumbing.com/api-resize#resize).\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n* Backfill batch size: The maximum number of images to resize in a single batch. By default, the function is configured to resize 3 images at a time. This is a conservative default to work with smallest memory option (512 MB).\nWARNING: Ensure your function has enough memory to handle the batch size.\n\n\n* Assign new access token: Should resized images have a new access token assigned to them,  different from the original image?\n\n\n* Content filter level: Set the level of content filtering to apply to uploaded images. Choose 'OFF' to disable content filtering entirely, 'BLOCK_ONLY_HIGH' to block only high-severity inappropriate content, 'BLOCK_MEDIUM_AND_ABOVE' for medium and high severity content, or 'BLOCK_LOW_AND_ABOVE' for the strictest filtering (blocks low, medium, and high severity content).\n\n\n* Custom content filter prompt: Optionally, provide a custom prompt for content filtering. This allows you to define specific criteria for filtering beyond the standard categories. Note that this prompt should be a yes/no question. For example, \"Does this image contain a cat?\" will filter out images that Gemini thinks contain a cat. This is additional filtering on top of whichever content filtering level you choose. Leave empty to use just your selected built-in content filtering configuration.\n\n\n* Path to placeholder image: Optionally, specify a path to a placeholder image to use when an uploaded image is blocked by content filtering. This should be a relative path within your storage bucket. If not provided, a default placeholder image is used.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n\n* aiplatform.user (Reason: Allows use of Gemini models for AI content filtering, if enabled.)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.onStart","description":"Occurs when a trigger has been called within the Extension, and will include data such as the context of the trigger request."},{"type":"firebase.extensions.storage-resize-images.v1.onSuccess","description":"Occurs when image resizing completes successfully. The event will contain further details about specific formats and sizes."},{"type":"firebase.extensions.storage-resize-images.v1.onError","description":"Occurs when an issue has been experienced in the Extension. This will include any error data that has been included within the Error Exception."},{"type":"firebase.extensions.storage-resize-images.v1.onCompletion","description":"Occurs when the function is settled. Provides no customized data other than the context."}]},"fetchTime":"2025-07-24T13:41:02.337103Z","lastOperationName":"projects/firebaseextensions/operations/ef38492d-7bc9-4230-a861-099dc0440455","state":"ACTIVE"},"params":{"INCLUDE_PATH_LIST":"/images","FAILED_IMAGES_PATH":"failed","IMG_SIZES":"200x200,600x600","DELETE_ORIGINAL_FILE":"false","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","MAKE_PUBLIC":"false","BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","IS_ANIMATED":"true","REGENERATE_TOKEN":"true","FUNCTION_MEMORY":"1024","DO_BACKFILL":"true"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/um-shotbuilder/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `um-shotbuilder.firebasestorage.app`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `um-shotbuilder.firebasestorage.app`, this extension does the following:\n\n- Creates resized image(s) with your specified dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `um-shotbuilder.firebasestorage.app` (and, if configured, under the path `{ unspecified parameter }`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publicly accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the original image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publicly accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Successfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringified object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringified JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","extensionRef":"firebase/storage-resize-images","extensionVersion":"0.2.10","systemParams":{"firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/location":"northamerica-northeast1"}},"lastOperationName":"projects/um-shotbuilder/operations/252d1cc3-c00e-4241-8468-e669ee0f088f","serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"aa6907c27a318f50275ca770d26682fdf18a811e2bc0c1bca952614650eb1aad","runtimeData":{"stateUpdateTime":"2025-08-13T05:51:17.260331539Z","processingState":{"state":"PROCESSING","detailMessage":"Resizing existing images in um-shotbuilder.firebasestorage.app"}}}]}
[info] i  functions: preparing functions directory for uploading... 
[info] i  functions: packaged /Users/tedghanime/Library/CloudStorage/Dropbox/App Development/shot-builder-app/functions (77.19 KB) for uploading 
[debug] [2025-08-14T03:39:12.390Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:12.390Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:12.390Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions [none]
[debug] [2025-08-14T03:39:13.010Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:39:13.010Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v1/projects/um-shotbuilder/locations/-/functions {"functions":[{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-backfillResizedImages","description":"Handles tasks from startBackfill to resize existing images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","httpsTrigger":{"url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/ext-storage-resize-images-backfillResizedImages","securityLevel":"SECURE_OPTIONAL"},"status":"OFFLINE","entryPoint":"backfillResizedImages","timeout":"540s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:55.065921136Z","versionId":"2","labels":{"goog-dm":"firebase-ext-storage-resize-images","goog-firebase-ext":"storage-resize-images","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","ingressSettings":"ALLOW_ALL","buildId":"f20073eb-b551-4af2-b740-539614f0c331","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/f20073eb-b551-4af2-b740-539614f0c331","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"},{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/ext-storage-resize-images-generateResizedImage","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","sourceArchiveUrl":"gs://firebase-mod-sources-prod/d3c84eed2b9aba4a8d403c19d71dd622cd2e7ceb72d81178de3cbb7f49fb849b","eventTrigger":{"eventType":"google.storage.object.finalize","resource":"projects/_/buckets/um-shotbuilder.firebasestorage.app","service":"storage.googleapis.com","failurePolicy":{}},"status":"OFFLINE","entryPoint":"generateResizedImage","timeout":"60s","availableMemoryMb":1024,"serviceAccountEmail":"ext-storage-resize-images@um-shotbuilder.iam.gserviceaccount.com","updateTime":"2025-08-13T05:39:56.610939186Z","versionId":"2","labels":{"goog-firebase-ext":"storage-resize-images","deployment-tool":"firebase-extensions","goog-firebase-ext-iid":"storage-resize-images","firebase-extensions-ar":"enabled","goog-dm":"firebase-ext-storage-resize-images"},"environmentVariables":{"BACKFILL_BATCH_SIZE":"3","CONTENT_FILTER_LEVEL":"OFF","DATABASE_INSTANCE":"","DATABASE_URL":"","DELETE_ORIGINAL_FILE":"false","DO_BACKFILL":"true","EXT_INSTANCE_ID":"storage-resize-images","FAILED_IMAGES_PATH":"failed","FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"databaseURL\":\"\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","FUNCTION_MEMORY":"1024","GCLOUD_PROJECT":"um-shotbuilder","IMAGE_TYPE":"false","IMG_BUCKET":"um-shotbuilder.firebasestorage.app","IMG_SIZES":"200x200,600x600","INCLUDE_PATH_LIST":"/images","IS_ANIMATED":"true","LOCATION":"northamerica-northeast1","MAKE_PUBLIC":"false","PROJECT_ID":"um-shotbuilder","REGENERATE_TOKEN":"true","STORAGE_BUCKET":"um-shotbuilder.firebasestorage.app"},"runtime":"nodejs20","maxInstances":3000,"ingressSettings":"ALLOW_INTERNAL_ONLY","buildId":"b4570cef-caa1-459c-8387-de874384d3ed","buildEnvironmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"buildName":"projects/168065141847/locations/northamerica-northeast1/builds/b4570cef-caa1-459c-8387-de874384d3ed","dockerRegistry":"ARTIFACT_REGISTRY","automaticUpdatePolicy":{},"buildServiceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com"}]}
[debug] [2025-08-14T03:39:13.011Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.011Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.011Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions filter=environment%3D%22GEN_2%22
[debug] [2025-08-14T03:39:13.454Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions 200
[debug] [2025-08-14T03:39:13.454Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/-/functions {"functions":[{"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"build":"projects/168065141847/locations/northamerica-northeast1/builds/afc5306d-73ea-437a-bfda-73d20455269d","runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"state":"UNKNOWN","updateTime":"2025-08-14T03:29:18.113067683Z","labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims","createTime":"2025-08-14T03:01:25.160830355Z"}]}
[info] i  functions: ensuring required API run.googleapis.com is enabled... 
[info] i  functions: ensuring required API eventarc.googleapis.com is enabled... 
[info] i  functions: ensuring required API pubsub.googleapis.com is enabled... 
[info] i  functions: ensuring required API storage.googleapis.com is enabled... 
[info] i  functions: generating the service identity for pubsub.googleapis.com... 
[debug] [2025-08-14T03:39:13.458Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.458Z] Checked if tokens are valid: true, expires at: 1755145730400
[info] i  functions: generating the service identity for eventarc.googleapis.com... 
[debug] [2025-08-14T03:39:13.459Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.459Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.459Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:39:13.459Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:39:13.459Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:39:13.460Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity [none]
[debug] [2025-08-14T03:39:13.460Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity x-goog-quota-user=projects/168065141847
[debug] [2025-08-14T03:39:13.460Z] >>> [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {}
[debug] [2025-08-14T03:39:13.885Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:39:13.885Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/pubsub.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-pubsub.iam.gserviceaccount.com","uniqueId":"105341289041531266520"}}
[debug] [2025-08-14T03:39:13.886Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity 200
[debug] [2025-08-14T03:39:13.886Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1beta1/projects/168065141847/services/eventarc.googleapis.com:generateServiceIdentity {"name":"operations/finished.DONE_OPERATION","done":true,"response":{"@type":"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity","email":"service-168065141847@gcp-sa-eventarc.iam.gserviceaccount.com","uniqueId":"107392028812519324335"}}
[debug] [2025-08-14T03:39:13.888Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.888Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.888Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder [none]
[debug] [2025-08-14T03:39:13.968Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder 200
[debug] [2025-08-14T03:39:13.968Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/um-shotbuilder {"projectNumber":"168065141847","projectId":"um-shotbuilder","lifecycleState":"ACTIVE","name":"UM-ShotBuilder","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-08-12T16:17:48.657642Z","parent":{"type":"organization","id":"921061560253"}}
[debug] [2025-08-14T03:39:13.969Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.969Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:13.969Z] >>> [apiv2][query] GET https://compute.googleapis.com/compute/v1/projects/168065141847 [none]
[debug] [2025-08-14T03:39:14.093Z] <<< [apiv2][status] GET https://compute.googleapis.com/compute/v1/projects/168065141847 403
[debug] [2025-08-14T03:39:14.093Z] <<< [apiv2][body] GET https://compute.googleapis.com/compute/v1/projects/168065141847 {"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"consumer":"projects/168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","containerInfo":"168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}}
[debug] [2025-08-14T03:39:14.094Z] unable to look up default compute service account. Falling back to 168065141847-compute@developer.gserviceaccount.com. Error: {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"consumer":"projects/168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","containerInfo":"168065141847"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}},"response":{"statusCode":403}},"exit":1,"message":"Request to https://compute.googleapis.com/compute/v1/projects/168065141847 had HTTP Error: 403, Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","status":403}
[debug] [2025-08-14T03:39:14.094Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.094Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.094Z] >>> [apiv2][query] GET https://compute.googleapis.com/compute/v1/projects/168065141847 [none]
[debug] [2025-08-14T03:39:14.157Z] <<< [apiv2][status] GET https://compute.googleapis.com/compute/v1/projects/168065141847 403
[debug] [2025-08-14T03:39:14.157Z] <<< [apiv2][body] GET https://compute.googleapis.com/compute/v1/projects/168065141847 {"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"containerInfo":"168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","consumer":"projects/168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}}
[debug] [2025-08-14T03:39:14.158Z] unable to look up default compute service account. Falling back to 168065141847-compute@developer.gserviceaccount.com. Error: {"name":"FirebaseError","children":[],"context":{"body":{"error":{"code":403,"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","errors":[{"message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","domain":"usageLimits","reason":"accessNotConfigured","extendedHelp":"https://console.developers.google.com"}],"status":"PERMISSION_DENIED","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"SERVICE_DISABLED","domain":"googleapis.com","metadata":{"containerInfo":"168065141847","activationUrl":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847","consumer":"projects/168065141847","serviceTitle":"Compute Engine API","service":"compute.googleapis.com"}},{"@type":"type.googleapis.com/google.rpc.LocalizedMessage","locale":"en-US","message":"Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry."},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Google developers console API activation","url":"https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847"}]}]}},"response":{"statusCode":403}},"exit":1,"message":"Request to https://compute.googleapis.com/compute/v1/projects/168065141847 had HTTP Error: 403, Compute Engine API has not been used in project 168065141847 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/compute.googleapis.com/overview?project=168065141847 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.","status":403}
[debug] [2025-08-14T03:39:14.159Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.159Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.159Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo [none]
[debug] [2025-08-14T03:39:14.353Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo 200
[debug] [2025-08-14T03:39:14.353Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/um-shotbuilder/billingInfo {"name":"projects/um-shotbuilder/billingInfo","projectId":"um-shotbuilder","billingAccountName":"billingAccounts/014C3F-A59F97-ACBC37","billingEnabled":true}
[debug] [2025-08-14T03:39:14.355Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.355Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.355Z] >>> [apiv2][query] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl [none]
[debug] [2025-08-14T03:39:14.703Z] <<< [apiv2][status] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl 200
[debug] [2025-08-14T03:39:14.703Z] <<< [apiv2][body] POST https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions:generateUploadUrl {"uploadUrl":"https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/185aef9f-f39c-4973-a307-418dbd627f33.zip?GoogleAccessId=service-168065141847@gcf-admin-robot.iam.gserviceaccount.com&Expires=1755144554&Signature=jUKCN2HH4CfaEzih36AKM4sOB4iZeG4Ny3KO8%2BwJwqffDySkqtc3LLFt8ENgm%2BU48D5BGJzBDcHvqGOfeyKYH8RM%2FNGJfrZl%2Bz8G7ORwdCwysrBIu%2BEVZx5DMSfCTnAYsmKVHbHmfhI542Ri6pDVaTN677ZNBDCdtmvrNEkEyk3R3egQ0fXQPi6u450FSXnfy8Ho9YYFj%2B3yQw1PFLrJaEpkC%2By6X2mz0ICdcHYuIBKwfODUtGCFCamRraCUomx%2BGSQOhaAv6d5hj1KwQvOFp2SZ3uF99QL7xGCCfRj1KV2AI0ukmlDZl%2BYoxeB%2Fo%2FE7t7%2FIii65uRQxUmlQavYRhQ%3D%3D","storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"185aef9f-f39c-4973-a307-418dbd627f33.zip"}}
[debug] [2025-08-14T03:39:14.704Z] >>> [apiv2][query] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/185aef9f-f39c-4973-a307-418dbd627f33.zip GoogleAccessId=service-168065141847%40gcf-admin-robot.iam.gserviceaccount.com&Expires=1755144554&Signature=jUKCN2HH4CfaEzih36AKM4sOB4iZeG4Ny3KO8%2BwJwqffDySkqtc3LLFt8ENgm%2BU48D5BGJzBDcHvqGOfeyKYH8RM%2FNGJfrZl%2Bz8G7ORwdCwysrBIu%2BEVZx5DMSfCTnAYsmKVHbHmfhI542Ri6pDVaTN677ZNBDCdtmvrNEkEyk3R3egQ0fXQPi6u450FSXnfy8Ho9YYFj%2B3yQw1PFLrJaEpkC%2By6X2mz0ICdcHYuIBKwfODUtGCFCamRraCUomx%2BGSQOhaAv6d5hj1KwQvOFp2SZ3uF99QL7xGCCfRj1KV2AI0ukmlDZl%2BYoxeB%2Fo%2FE7t7%2FIii65uRQxUmlQavYRhQ%3D%3D
[debug] [2025-08-14T03:39:14.704Z] >>> [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/185aef9f-f39c-4973-a307-418dbd627f33.zip [stream]
[debug] [2025-08-14T03:39:14.844Z] <<< [apiv2][status] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/185aef9f-f39c-4973-a307-418dbd627f33.zip 200
[debug] [2025-08-14T03:39:14.844Z] <<< [apiv2][body] PUT https://storage.googleapis.com/gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com/185aef9f-f39c-4973-a307-418dbd627f33.zip [omitted]
[info] ✔  functions: functions folder uploaded successfully 
[info] i  functions: updating Node.js 22 (2nd Gen) function setUserClaims(northamerica-northeast1)... 
[debug] [2025-08-14T03:39:14.849Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.849Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:14.850Z] >>> [apiv2][query] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims updateMask=name%2CbuildConfig.runtime%2CbuildConfig.entryPoint%2CbuildConfig.source.storageSource.bucket%2CbuildConfig.source.storageSource.object%2CbuildConfig.environmentVariables%2CbuildConfig.sourceToken%2CserviceConfig.environmentVariables%2CserviceConfig.ingressSettings%2CserviceConfig.timeoutSeconds%2CserviceConfig.serviceAccountEmail%2CserviceConfig.availableMemory%2CserviceConfig.minInstanceCount%2CserviceConfig.maxInstanceCount%2CserviceConfig.maxInstanceRequestConcurrency%2CserviceConfig.availableCpu%2CserviceConfig.vpcConnector%2CserviceConfig.vpcConnectorEgressSettings%2Clabels
[debug] [2025-08-14T03:39:14.850Z] >>> [apiv2][body] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-uploads-168065141847.northamerica-northeast1.cloudfunctions.appspot.com","object":"185aef9f-f39c-4973-a307-418dbd627f33.zip"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""}},"serviceConfig":{"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":null,"timeoutSeconds":null,"serviceAccountEmail":null,"availableMemory":"256Mi","minInstanceCount":null,"maxInstanceCount":null,"maxInstanceRequestConcurrency":80,"availableCpu":"1","vpcConnector":null,"vpcConnectorEgressSettings":null},"labels":{"deployment-tool":"cli-firebase","deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"}}
[debug] [2025-08-14T03:39:15.658Z] <<< [apiv2][status] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims 200
[debug] [2025-08-14T03:39:15.658Z] <<< [apiv2][body] PATCH https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2"},"done":false}
[debug] [2025-08-14T03:39:15.659Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:15.659Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:15.659Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:15.841Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:15.841Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:39:16.343Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:39:16.343Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:16.344Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:16.344Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:16.476Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:16.476Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","state":"NOT_STARTED"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":false}
[debug] [2025-08-14T03:39:17.478Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:39:17.478Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:17.478Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:17.478Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:17.651Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:17.652Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049"},"done":false}
[debug] [2025-08-14T03:39:19.653Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:39:19.653Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:19.653Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:19.653Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:19.856Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:19.856Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049"},"done":false}
[debug] [2025-08-14T03:39:23.857Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:39:23.858Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:23.858Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:23.858Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:24.028Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:24.028Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"BUILD","message":"Build in progress","state":"IN_PROGRESS","resource":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049","resourceUri":"https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847"},{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION","buildName":"projects/168065141847/locations/northamerica-northeast1/builds/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049"},"done":false}
[debug] [2025-08-14T03:39:32.029Z] [update-default-northamerica-northeast1-setUserClaims] Retrying task index 0
[debug] [2025-08-14T03:39:32.030Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:32.030Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:32.030Z] >>> [apiv2][query] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b [none]
[debug] [2025-08-14T03:39:32.276Z] <<< [apiv2][status] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b 200
[debug] [2025-08-14T03:39:32.276Z] <<< [apiv2][body] GET https://cloudfunctions.googleapis.com/v2/projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/operations/operation-1755142755397-63c4b04772eeb-714c7dc3-ae92cc3b","metadata":{"@type":"type.googleapis.com/google.cloud.functions.v2.OperationMetadata","createTime":"2025-08-14T03:39:16.009422252Z","endTime":"2025-08-14T03:39:28.361536736Z","target":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","verb":"update","cancelRequested":false,"apiVersion":"v2","requestResource":{"@type":"type.googleapis.com/google.cloud.functions.v2.Function","name":"projects/um-shotbuilder/locations/northamerica-northeast1/functions/setUserClaims","buildConfig":{"runtime":"nodejs22","entryPoint":"setUserClaims","source":{"storageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755142755959189"}},"environmentVariables":{"GOOGLE_NODE_RUN_SCRIPTS":""},"dockerRepository":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","sourceProvenance":{"resolvedStorageSource":{"bucket":"gcf-v2-sources-168065141847-northamerica-northeast1","object":"setUserClaims/function-source.zip","generation":"1755140484833453"}},"dockerRegistry":"ARTIFACT_REGISTRY","serviceAccount":"projects/um-shotbuilder/serviceAccounts/168065141847-compute@developer.gserviceaccount.com","automaticUpdatePolicy":{}},"serviceConfig":{"service":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims","timeoutSeconds":60,"environmentVariables":{"FIREBASE_CONFIG":"{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}","GCLOUD_PROJECT":"um-shotbuilder","EVENTARC_CLOUD_EVENT_SOURCE":"projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims","FUNCTION_TARGET":"setUserClaims","LOG_EXECUTION_ID":"true"},"ingressSettings":"ALLOW_ALL","serviceAccountEmail":"168065141847-compute@developer.gserviceaccount.com","availableMemory":"256Mi","maxInstanceRequestConcurrency":80,"availableCpu":"1"},"state":"UNKNOWN","labels":{"deployment-callable":"true","firebase-functions-hash":"c6f3101195e4f43b46a5c141811b6a03225a00a0"},"stateMessages":[{"severity":"ERROR","type":"CloudRunServiceNotFound","message":"Cloud Run service projects/um-shotbuilder/locations/northamerica-northeast1/services/setuserclaims for the function was not found. The function will not work correctly. Please redeploy."}],"environment":"GEN_2","url":"https://northamerica-northeast1-um-shotbuilder.cloudfunctions.net/setUserClaims"},"stages":[{"name":"SERVICE","state":"NOT_STARTED"}],"operationType":"UPDATE_FUNCTION"},"done":true,"error":{"code":3,"message":"Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847.\n"}}
[debug] [2025-08-14T03:39:32.277Z] Got source token undefined for region northamerica-northeast1
[error] Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account
 You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847.

[debug] [2025-08-14T03:39:32.278Z] Total Function Deployment time: 17430
[debug] [2025-08-14T03:39:32.278Z] 1 Functions Deployed
[debug] [2025-08-14T03:39:32.278Z] 1 Functions Errored
[debug] [2025-08-14T03:39:32.278Z] 0 Function Deployments Aborted
[debug] [2025-08-14T03:39:32.278Z] Average Function Deployment time: 17430
[info] 
[info] Functions deploy had errors with the following functions:
	setUserClaims(northamerica-northeast1)
[debug] [2025-08-14T03:39:32.279Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:32.279Z] Checked if tokens are valid: true, expires at: 1755145730400
[debug] [2025-08-14T03:39:32.280Z] >>> [apiv2][query] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts [none]
[debug] [2025-08-14T03:39:32.625Z] <<< [apiv2][status] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts 200
[debug] [2025-08-14T03:39:32.625Z] <<< [apiv2][body] GET https://artifactregistry.googleapis.com/v1/projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts {"name":"projects/um-shotbuilder/locations/northamerica-northeast1/repositories/gcf-artifacts","format":"DOCKER","description":"This repository is created and used by Cloud Functions for storing function docker images.","labels":{"goog-managed-by":"cloudfunctions"},"createTime":"2025-08-13T05:04:00.613753Z","updateTime":"2025-08-14T03:29:30.573247Z","mode":"STANDARD_REPOSITORY","cleanupPolicies":{"firebase-functions-cleanup":{"id":"firebase-functions-cleanup","action":"DELETE","condition":{"tagState":"ANY","olderThan":"2592000s"}}},"vulnerabilityScanningConfig":{"lastEnableTime":"2025-08-13T05:03:51.845593405Z","enablementState":"SCANNING_DISABLED","enablementStateReason":"API containerscanning.googleapis.com is not enabled."},"registryUri":"northamerica-northeast1-docker.pkg.dev/um-shotbuilder/gcf-artifacts"}
[debug] [2025-08-14T03:39:32.626Z] Functions deploy failed.
[debug] [2025-08-14T03:39:32.626Z] {
  "endpoint": {
    "id": "setUserClaims",
    "project": "um-shotbuilder",
    "region": "northamerica-northeast1",
    "entryPoint": "setUserClaims",
    "platform": "gcfv2",
    "runtime": "nodejs22",
    "callableTrigger": {},
    "labels": {
      "deployment-tool": "cli-firebase"
    },
    "serviceAccount": null,
    "ingressSettings": null,
    "availableMemoryMb": null,
    "timeoutSeconds": null,
    "maxInstances": null,
    "minInstances": null,
    "concurrency": 80,
    "vpc": null,
    "environmentVariables": {
      "FIREBASE_CONFIG": "{\"projectId\":\"um-shotbuilder\",\"storageBucket\":\"um-shotbuilder.firebasestorage.app\"}",
      "GCLOUD_PROJECT": "um-shotbuilder",
      "EVENTARC_CLOUD_EVENT_SOURCE": "projects/um-shotbuilder/locations/northamerica-northeast1/services/setUserClaims"
    },
    "codebase": "default",
    "securityLevel": "SECURE_ALWAYS",
    "cpu": 1,
    "targetedByOnly": true,
    "hash": "c6f3101195e4f43b46a5c141811b6a03225a00a0"
  },
  "op": "update",
  "original": {
    "name": "FirebaseError",
    "children": [],
    "exit": 1,
    "message": "Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847.\n",
    "original": {
      "code": 3,
      "message": "Build failed with status: FAILURE. Could not build the function due to a missing permission on the build service account. If you didn't revoke that permission explicitly, this could be caused by a change in the organization policies. Please refer to the following documentation for more details and resolution: https://cloud.google.com/functions/docs/troubleshooting#build-service-account\n You can also view the logs at https://console.cloud.google.com/cloud-build/builds;region=northamerica-northeast1/51c19119-7fbe-4cf9-bdeb-2bbb7e3ac049?project=168065141847.\n"
    },
    "status": 3,
    "code": 3
  }
}
[debug] [2025-08-14T03:39:32.627Z] Error: Failed to update function setUserClaims in region northamerica-northeast1
    at /Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:399:19
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Fabricator.updateV2Function (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:388:32)
    at async Fabricator.updateEndpoint (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:155:13)
    at async handle (/Users/tedghanime/.npm/_npx/7750544ccf494d8b/node_modules/firebase-tools/lib/deploy/functions/release/fabricator.js:89:17)
[error] 
[error] Error: There was an error deploying functions
