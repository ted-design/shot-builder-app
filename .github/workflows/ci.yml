name: CI

on:
  push:
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash -Eeuo pipefail {0}'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # Export Firebase env vars for tests/build. Use repo secrets when available;
      # fall back to harmless values for forked PRs where secrets are not exposed.
      VITE_FIREBASE_API_KEY:             ${{ secrets.VITE_FIREBASE_API_KEY || 'test-key' }}
      VITE_FIREBASE_AUTH_DOMAIN:         ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN || 'test.firebaseapp.com' }}
      VITE_FIREBASE_PROJECT_ID:          ${{ secrets.VITE_FIREBASE_PROJECT_ID || 'test-project' }}
      VITE_FIREBASE_STORAGE_BUCKET:      ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET || 'test.appspot.com' }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID || '1234567890' }}
      VITE_FIREBASE_APP_ID:              ${{ secrets.VITE_FIREBASE_APP_ID || '1:123:web:abc' }}
      VITE_FIREBASE_MEASUREMENT_ID:      ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'  # optional but helps

      - name: Install dependencies
        run: npm ci || npm install

      - name: Lint (if available)
        run: npm run lint --if-present

      - name: Test (if available)
        run: npm test --if-present

      - name: Build
        run: npm run build

      - name: Upload dist artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: ignore   # avoids failure if dist doesn't exist
